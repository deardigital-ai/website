name: Pull Request Analysis

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  analyze-pr:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get PR diff
        id: diff
        run: |
          # Get the PR diff
          PR_DIFF=$(git diff --patch ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          
          # Save the diff to an output variable, escaping newlines for GitHub Actions
          echo "diff<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_DIFF" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Analyze PR with LLM
        id: analysis
        run: |
          # Get PR title, body and diff
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_DIFF="${{ steps.diff.outputs.diff }}"
          
          # Create the prompt text
          PROMPT_TEXT="You are a helpful code reviewer. Analyze the following pull request and provide feedback.

          PR Title: $PR_TITLE
          PR Description: $PR_BODY

          Code Changes:
          $PR_DIFF

          Provide a concise analysis with the following sections:
          1. Summary of Changes (1-2 sentences)
          2. Potential Issues or Bugs (list up to 3)
          3. Code Quality Suggestions (list up to 3)
          4. Security Considerations (if any)

          Keep your response under 400 words and focus on the most important aspects."
          
          # Create JSON payload for Ollama
          JSON_PAYLOAD="{\"model\": \"qwq:latest\", \"prompt\": $(echo "$PROMPT_TEXT" | jq -Rs .), \"stream\": false}"
          
          # Call Ollama API to analyze PR
          ANALYSIS_RESULT=$(curl -s -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD" \
            http://localhost:11434/api/generate | jq -r '.response' | \
            # Filter out <think> tags and their content
            sed -E 's/<think>.*<\/think>//g')
          
          # Save the analysis to an output variable
          echo "result<<EOF" >> $GITHUB_OUTPUT
          echo "$ANALYSIS_RESULT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const analysis = `${{ steps.analysis.outputs.result }}`;
            
            // Add a header to the comment
            const comment = `## Automated PR Analysis ðŸ¤–\n\n${analysis}\n\n---\n*This is an automated analysis. Please consider this feedback as suggestions.*`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            }); 